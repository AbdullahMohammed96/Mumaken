@model Mumaken.Domain.DTO.OrderDTO.OrderDetailsDto
@using Mumaken.Domain.Enums;
@{
    var ordercase = Model.orderInfo.orderCase;
}
<ul class="steps mb-4 sm">

    <li class="step-item active">
        <span class="progress-count"></span>
        <span class="progress-label d-block">@localizer["New"]</span>
    </li>

    <li class="step-item @((Model.orderInfo.orderStatus == (int)OrderStutes.Current || Model.orderInfo.orderStatus == (int)OrderStutes.Finished) ? "active" : "")">
        <span class="progress-count"></span>
        <span class="progress-label d-block">@localizer["Current"]</span>
    </li>

    <li class="step-item @(Model.orderInfo.orderStatus == (int)OrderStutes.Finished ? "active" : "")">
        <span class="progress-count"></span>
        <span class="progress-label d-block">@localizer["Finished"]</span>
    </li>

</ul>


@if (Model.orderInfo.orderStatus != (int)OrderStutes.NewOrder)
{
    @if (Model.orderInfo.orderCase == (int)OrderCase.Accepted)
    {
        <div class="custom_alert mb-4">@localizer["Remaining duration to end contract"]: @Model.orderInfo.remaingDateToEndRental @localizer["Days"]</div>
    }
    else
    {
        if (Model.orderInfo.orderCase == (int)OrderCase.FinishedRentalPeriodAndNotRenew)
        {
            <div class="custom_alert red mb-4">@localizer["Contract duration broken, not renewed or paid"]</div>
        }
        else
        {

            var isRead = ordercase == (int)OrderCase.SendRequsetToCancelContract
                || ordercase == (int)OrderCase.SendRequsetToFinishedContract
                || ordercase == (int)OrderCase.ConfirmReciptCar;
                <div class="flex-sm-gap">

            <div class="custom_alert red">
                @Model.orderInfo.orderCaseText
            </div>
                @if (ordercase == (int)OrderCase.SendRequsetToFinishedContract || ordercase == (int)OrderCase.SendRequsetToCancelContract)
                {
                    <button type="button" class="main-btn up sec green-bg" data-bs-toggle="modal" data-bs-target="#confirmReciptCar">
                        @localizer["Confirm receipt of the car"]
                    </button>
                }
                @if (ordercase == (int)OrderCase.ConfirmReciptCar || ordercase == (int)OrderCase.PaymentOrderAndWaitConfirmRentanlCompany)
                {
                    <button type="button" class="main-btn up sec green-bg" data-bs-toggle="modal" data-bs-target="#confirmPaymentOrderModel">
                        @localizer["Confirm payment"]
                    </button>
                }
                </div>
   
        }

    }

    <!-- <div class="custom_alert red mb-4">تم كسر مدة التعاقد ولم يتم التجديد او الدفع</div> -->
    <!-- <div class="custom_alert mb-4">تم دفع قيمة الايجار وتجديد المدة</div> -->
    <!-- <div class="custom_alert mb-4">تم إلغاء التعاقد ودفع قيمة الاستئجار</div> -->
    <!-- <div class="custom_alert mb-4">تم انتهاء مدة الاستئجار ودفع قيمته</div> -->
}


<div class="section_style mb-4">
    <h3 class="main-card-title"> @localizer["Order Information"]</h3>

    <div class="content">

        <div class="main_item">
            <span class="main_item_first">@localizer["Order Number"] </span>
            <span class="main_item_sec">@Model.orderInfo.orderId</span>
        </div>

        <div class="main_item">
            <span class="main_item_first"> @localizer["Order Date"]</span>
            <span class="main_item_sec">@Model.orderInfo.orderDate</span>
        </div>

        <div class="main_item">
            <span class="main_item_first"> @localizer["Payment Method"]</span>
            <span class="main_item_sec">@Model.paymentInfo.patmentType</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Daily Rental Value"]</span>
            <span class="main_item_sec">@Model.paymentInfo.priceForDailyRental @localizer["SAR"]</span>
        </div>

        <div class="main_item">
            <span class="main_item_first"> @localizer["Order Value"]</span>
            <span class="main_item_sec">@Model.paymentInfo.subTotal @localizer["SAR"]</span>
        </div>

        <div class="main_item">
            <span class="main_item_first"> @localizer["Discount Value"]</span>
            <span class="main_item_sec">@Model.paymentInfo.discountPrice @localizer["SAR"]</span>
        </div>
        @if (Model.paymentInfo.breakPeriod != 0)
        {
            <div class="main_item">
                <span class="main_item_first"> @localizer["Period for breaking the contract"]</span>
                <span class="main_item_sec">@Model.paymentInfo.breakPeriod @localizer["Days"]</span>

            </div>
            <div class="main_item">
                <span class="main_item_first"> @localizer["Price for breaking the contract"]</span>
                <span class="main_item_sec">@Model.paymentInfo.breakPrice @localizer["SAR"]</span>

            </div>
        }

        @if (Model.paymentInfo.dailyRentalCompanyPeriod != 0)
        {
            <div class="main_item">
                <span class="main_item_first"> @localizer["The period of delay from the rental company receiving the car"]</span>
                <span class="main_item_sec">@Model.paymentInfo.dailyRentalCompanyPeriod @localizer["Days"]</span>

            </div>
            <div class="main_item">
                <span class="main_item_first"> @localizer["The price of the delay period from the rental company in receiving the car"]</span>
                <span class="main_item_sec">@Model.paymentInfo.dailyRentalCompanyPrice @localizer["SAR"]</span>
            </div>
        }


        <div class="main_item">
            <span class="main_item_first sec">@localizer["Total"]</span>
            <span class="main_item_sec sec">@Model.paymentInfo.netPrice @localizer["SAR"]</span>
        </div>

    </div>
</div>

<div class="section_style mb-4">
    <h3 class="main-card-title">@localizer["Captain Information"]</h3>

    <div class="content">

        <div class="main_item">
            <span class="main_item_first"> @localizer["Captain Image"]</span>
            <img src="@Model.userInfo.image" alt="" class="small_img">
        </div>

        <div class="main_item">
            <span class="main_item_first"> @localizer["Captain Name"]</span>
            <span class="main_item_sec">@Model.userInfo.user_Name</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Captain Mobile Number"]</span>
            <span class="main_item_sec" dir="ltr">@Model.userInfo.phoneNumber</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Email"]</span>
            <span class="main_item_sec">@Model.userInfo.email</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["City"]</span>
            <span class="main_item_sec">@Model.userInfo.city</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Age"]</span>
            <span class="main_item_sec">@Model.userInfo.age</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Gender"]</span>
            <span class="main_item_sec">@Model.userInfo.genderType</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Nationality"]</span>
            <span class="main_item_sec">@Model.userInfo.nationality</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Identity Number"] </span>
            <span class="main_item_sec">@Model.userInfo.identityNumber</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Driver's License Image"]</span>
            <img src="@Model.userInfo.deliverLicenceImage" alt="" class="small_img">
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Identity Image"]</span>
            <img src="@Model.userInfo.indentityNumberImage" alt="" class="small_img">
        </div>

    </div>
</div>


<!-- بيانات السيارة المختارة -->
<div class="section_style mb-4">
    <h3 class="main-card-title">@localizer["Selected Car Information"]</h3>

    <div class="content">

        <div class="main_item">
            <span class="main_item_first">@localizer["Category"]</span>
            <span class="main_item_sec">@Model.OrderCarInfo.carCategory</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Type"]</span>
            <span class="main_item_sec">@Model.OrderCarInfo.carType</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Model"]</span>
            <span class="main_item_sec">@Model.OrderCarInfo.carModel</span>
        </div>

    </div>
</div>


<!-- بيانات التأجير -->
<div class="section_style mb-4">
    <h3 class="main-card-title">@localizer["Rental Information"]</h3>

    <div class="content">

        <div class="main_item">
            <span class="main_item_first">@localizer["Rental Period"]</span>
            <span class="main_item_sec">@Model.OrderCarInfo.rentalPeriod @localizer["Day"]</span>
        </div>

        <div class="main_item">
            <span class="main_item_first">@localizer["Rental Start Date"]</span>
            <span class="main_item_sec">@Model.OrderCarInfo.dateStartPeriod</span>
        </div>

    </div>
</div>

@if (Model.orderInfo.orderStatus != (int)OrderStutes.NewOrder)
{

    <div class="section_style mb-4">
        <h3 class="main-card-title">@localizer["Car Pickup Information"]</h3>

        <div class="content">

            <div class="main_item">
                <span class="main_item_first">@localizer["Car Pickup Date"]</span>
                <span class="main_item_sec">@Model.OrderCarInfo.datePickupCar</span>
            </div>

            <div class="main_item">
                <span class="main_item_first">@localizer["Car Pickup Time"]</span>
                <span class="main_item_sec">@Model.OrderCarInfo.timePickupCar</span>
            </div>

            <div class="main_item">
                <span class="main_item_first">@localizer["Car Pickup Location"]</span>
                <span class="main_item_sec red">
                    <i class="fa-solid fa-location-dot"></i>
                    @Model.OrderCarInfo.locationPickupCar
                </span>
            </div>

            <div class="main_item">
                <span class="main_item_first">@localizer["Car Delivery Date"]</span>
                <span class="main_item_sec">@Model.OrderCarInfo.dateDeliveryCar</span>
            </div>

            <div class="main_item">
                <span class="main_item_first">@localizer["Car Delivery Time"]</span>
                <span class="main_item_sec">@Model.OrderCarInfo.timeDeliveryCar</span>
            </div>

        </div>
    </div>

}

@if (Model.orderInfo.isRenewToAnotherPeriod)
{
    <!-- بيانات تجديد الاستئجار -->
    <div class="section_style mb-4">
        <h3 class="main-card-title">@localizer["Rental Renewal Information"]</h3>

        <div class="content">

            <div class="main_item">
                <span class="main_item_first">@localizer["New Rental Period"]</span>
                <span class="main_item_sec">@Model.renewOrderInfo.newPeriod @localizer["Day"]</span>
            </div>

            <div class="main_item">
                <span class="main_item_first">@localizer["Order Value"]</span>
                <span class="main_item_sec">@Model.renewOrderInfo.subTotal @localizer["SAR"]</span>
            </div>

            <div class="main_item">
                <span class="main_item_first">@localizer["Discount Value"]</span>
                <span class="main_item_sec">@Model.renewOrderInfo.discountPrice @localizer["SAR"]</span>
            </div>
            @if (Model.renewOrderInfo.breakPeriod != 0)
            {
                <div class="main_item">
                    <span class="main_item_first"> @localizer["Period for breaking the contract"]</span>
                    <span class="main_item_sec">@Model.renewOrderInfo.breakPeriod @localizer["Days"]</span>

                </div>

                <div class="main_item">
                    <span class="main_item_first"> @localizer["Price for breaking the contract"]</span>
                    <span class="main_item_sec">@Model.renewOrderInfo.breakPrice @localizer["SAR"]</span>

                </div>

            }

            @if (Model.renewOrderInfo.dailyRentalCompanyPeriod!=0)
            {
                <div class="main_item">
                    <span class="main_item_first"> @localizer["The period of delay from the rental company receiving the car"]</span>
                    <span class="main_item_sec">@Model.renewOrderInfo.dailyRentalCompanyPeriod @localizer["Days"]</span>

                </div>
                <div class="main_item">
                    <span class="main_item_first"> @localizer["The price of the delay period from the rental company in receiving the car"]</span>
                    <span class="main_item_sec">@Model.renewOrderInfo.dailyRentalCompanyPrice @localizer["SAR"]</span>
                </div>
            }
    


            <div class="main_item">
                <span class="main_item_first sec">@localizer["Total"]</span>
                <span class="main_item_sec sec">@Model.renewOrderInfo.netPrice @localizer["SAR"]</span>
            </div>

        </div>
    </div>

}


@if (Model.orderInfo.orderStatus == (int)OrderStutes.NewOrder)
{
    <div class="d-flex gap-3 mt-4 flex-wrap">
        <button type="button" class="main-btn up sec md" data-bs-toggle="modal"
                data-bs-target="#acceptModal">
            @localizer["Accept"]
        </button>
        <button type="button" data-bs-toggle="modal" data-bs-target="#rejectModal"
                class="main-btn up red md">
            @localizer["Reject"]
        </button>
    </div>

}


<!-- Modal -->
<!-- ==================================== Start Reject Modal ==================================== -->
<div class="modal fade" id="rejectModal" aria-hidden="true" aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog sm modal-dialog-centered">
        <form class="modal-content p-4" asp-action="RefusedOrder" asp-asp-controller=" Orders">

            <button type="button" class="close-model-btn" data-bs-dismiss="modal">
                <i class="fa-solid fa-xmark"></i>
            </button>

            <p class="fs15 c-black text-center">@localizer["Reason for Rejecting the Order"]</p>

            <div class="input-g mt-4 w-100">
                <label for="" class="main-label">
                    @localizer["Reason for Rejecting the Order"]
                    <span class="hint">*</span>
                </label>
                <input type="hidden" name="refusedOrderId" value="@Model.orderInfo.orderId" />
                <div class="main-input">
                    <textarea class="input-me text-area" name="refusedReason" id="refusedReason" required
                              placeholder="@localizer["Enter Reason for Rejecting the Order"]"></textarea>
                </div>
            </div>

            <div class="d-flex gap-3 w-100">
                <button type="submit" class="main-btn up flex-grow-1" id="btnSumbitRejectForm" hidden>@localizer["Confirm"]</button>
                <button type="button" onclick="rejectOrder()" class="main-btn up flex-grow-1">@localizer["Confirm"]</button>
            </div>

        </form>
    </div>
</div>

<!-- ==================================== End Reject Modal ==================================== -->
<!-- ==================================== Start Accept Modal ==================================== -->
<div class="modal fade" id="acceptModal" aria-hidden="true" aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog sm modal-dialog-centered">
        <form class="modal-content p-4" enctype="multipart/form-data" asp-action="AcceptOrder" asp-controller="Orders">
            <input type="hidden" value="@Model.orderInfo.orderId" name="accpetedRentalModel.OrderId" />
            <button type="button" class="close-model-btn" data-bs-dismiss="modal">
                <i class="fa-solid fa-xmark"></i>
            </button>

            <p class="fs15 c-black text-center">@localizer["Car Pickup Information"]</p>

            <div class="input-g mt-4 w-100">
                <label for="" class="main-label">
                    @localizer["Car Pickup Date"]
                    <span class="hint">*</span>
                </label>
                <div class="main-input">
                    <input type="text" class="input-me flatpickr" required placeholder="@localizer["Enter Car Pickup Date"]" name="accpetedRentalModel.datePickupCar">
                    <i class="fa-regular fa-calendar main-icon"></i>
                    <span asp-validation="accpetedRentalModel.datePickupCar" class="text-danger"></span>
                </div>
            </div>

            <div class="input-g w-100">
                <label for="" class="main-label">
                    @localizer["Car Pickup Time"]
                    <span class="hint">*</span>
                </label>
                <div class="main-input">
                    <input type="text" class="input-me flatpickrTime" required placeholder="@localizer["Enter Car Pickup Time"]" name="accpetedRentalModel.TimePickupCar">
                    <i class="fa-regular fa-clock main-icon"></i>
                    <span asp-validation="accpetedRentalModel.TimePickupCar" class="text-danger"></span>
                </div>
            </div>

            <div class="input-g w-100">
                <label for="" class="main-label">
                    @localizer["Car Pickup Location"]
                    <span class="hint">*</span>
                </label>
                <div class="main-input input-sh">
                    <input type="hidden" name="accpetedRentalModel.lat" id="lat" />
                    <input type="hidden" name="accpetedRentalModel.lng" id="lng" />
                    <input type="text" readonly id="address" class="input-me" placeholder="@localizer["Enter Car Pickup Location"]" name="accpetedRentalModel.locationPickupCar">
                    <i class="fa-solid fa-location-dot main-icon"></i>
                </div>
            </div>

            <div class="p-2 bg-light w-100 mb-3 map_container">
                <div class="container-map w-100">
                    <div class="main-input mb-3">
                        <input type="text" class="input-me" name="address2" id="address2" placeholder="@localizer["Search Here"]" />
                        <span class="current-loc"></span>
                    </div>
                    <div id="map" style="width: 100%; height: 300px"></div>
                </div>
            </div>


            <div class="input-g mt-4 w-100">
                <lablel class="main-label">
                    @localizer["Car Insurance Information"] <span class="hint">*</span>
                </lablel>
                <div class="main-input">
                    <textarea class="input-me text-area" placeholder="@localizer["Enter Car Insurance Information"]" name="accpetedRentalModel.InsuranceInformation" id="accpetedRentalModel.InsuranceInformation"></textarea>
                </div>
            </div>

            <div class="input-g mt-4 w-100 upload-con">
                <lablel class="main-label">@localizer["Car Insurance Information File"] <span class="hint">*</span> </lablel>
                <div class="main-input">
                    <label for="idImg" class="input-me photo-input">
                        @localizer["Attach Car Insurance Information File"]
                        <input type="file" accept="application/*" class="hidden-input img-upload-input" id="idImg" name="accpetedRentalModel.FileInsurancInformation">
                        <i class="fa-solid fa-arrow-up-from-bracket main-icon"></i>
                    </label>

                </div>
                <div class="photo-con"></div>
            </div>

            <div class="input-g mt-4 w-100 upload-con">
                <lablel class="main-label">@localizer["Car Registration Document"] <span class="hint">*</span> </lablel>
                <div class="main-input">
                    <label for="carImg" class="input-me photo-input">
                        @localizer["Attach Car Registration Document"]
                        <input type="file" accept="application/*" class="hidden-input img-upload-input" id="carImg" name="accpetedRentalModel.CarForm">
                        <i class="fa-solid fa-arrow-up-from-bracket main-icon"></i>
                    </label>

                </div>
                <div class="photo-con"></div>
            </div>

            <div class="d-flex gap-3 w-100">
               @*  <button type="submit" data-bs-dismiss="modal" class="main-btn up flex-grow-1">@localizer["Confirm"]</button> *@
                <button type="submit" class="main-btn up flex-grow-1">@localizer["Confirm"]</button>
           </div>

        </form>
    </div>
</div>
<!-- ==================================== End Accept Modal ==================================== -->
<!-- ==================================== Start confirm recipt car Modal ==================================== -->
<div class="modal fade" id="confirmReciptCar" aria-hidden="true" aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog sm modal-dialog-centered">
        <form class="modal-content p-4" asp-action="ConfirmReceiptCar" asp-controller="Orders">

            <button type="button" class="close-model-btn" data-bs-dismiss="modal">
                <i class="fa-solid fa-xmark"></i>
            </button>

            <p class="fs15 c-black text-center mt-4 mb-4">@localizer["Are you sure you receive the car?"]</p>

            <input type="hidden" name="orderId" value="@Model.orderInfo.orderId" />

            <div class="d-flex gap-3 w-100">
                <button type="submit" class="main-btn up flex-grow-1">@localizer["Confirm receipt of the car"]</button>
            </div>

        </form>
    </div>
</div>

<!-- ==================================== End confirm recipt car Modal ==================================== -->
<!-- ==================================== Start payment Order Modal ==================================== -->
<div class="modal fade" id="confirmPaymentOrderModel" aria-hidden="true" aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog sm modal-dialog-centered">
        <form class="modal-content p-4" asp-action="ConfirmPaymentOrder" asp-controller="Orders">

            <button type="button" class="close-model-btn" data-bs-dismiss="modal">
                <i class="fa-solid fa-xmark"></i>
            </button>

            <p class="fs15 c-black text-center mt-4 mb-4">@localizer["Are you sure that the customer has paid for the rental period?"]</p>

            <input type="hidden" name="orderId" value="@Model.orderInfo.orderId" />

            <div class="d-flex gap-3 w-100">
                <button type="submit" class="main-btn up flex-grow-1">@localizer["Confirm payment"]</button>
            </div>

        </form>
    </div>
</div>

<!-- ==================================== End confirm payment Order Modal ==================================== -->
@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
    @* <script type="text/javascript" src="https://maps.google.com/maps/api/js?&libraries=places&key=AIzaSyBNLoYGrbnQI_GMqHt6m0PSN9yA7Zvq7gA"></script> *@
    <script type="text/javascript" src="https://maps.google.com/maps/api/js?&libraries=places&key=AIzaSyAB1ow9ErDvh6Wf6zODv7vMo7hoVA0ApX4"></script>
    <script>
        var map, infoWindow;
        var marker;
        var lat = document.getElementById("lat");
        var lng = document.getElementById("lng");
        var address = document.getElementById("address");
        var address2 = document.getElementById("address2");
        var geocoder = new google.maps.Geocoder();
        var infowindow = new google.maps.InfoWindow();

        setTimeout(function () {
            if (document.querySelector(".current-loc")) {


                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        (position) => {
                            const pos = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude,
                            };

                            infoWindow.setPosition(pos);
                            infoWindow.setContent("Location found.");
                            infoWindow.open(map);
                            map.setCenter(pos);
                            lat.value = pos.lat;
                            lng.value = pos.lng;
                            initMap();
                        },
                        () => {
                            handleLocationError(true, infoWindow, map.getCenter());
                        }
                    );
                } else {
                    // Browser doesn't support Geolocation
                    handleLocationError(false, infoWindow, map.getCenter());
                    console.log("sssssssssss")
                }

            }
        }, 500)

        function initMap() {
            var myLatlng = new google.maps.LatLng(lat.value, lng.value);
            var mapOptions = {
                zoom: 10,
                center: myLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
            };

            map = new google.maps.Map(document.getElementById("map"), mapOptions);
            marker = new google.maps.Marker({
                map: map,
                position: myLatlng,
                draggable: true,
            });

            // set current location
            infoWindow = new google.maps.InfoWindow();

            const locationButton = document.createElement("button");
            locationButton.setAttribute("type", "button");
            locationButton.classList.add("up", "default-font");

            locationButton.textContent = "@localizer["Your Current Location"]";
            locationButton.classList.add("custom-map-control-button");
            map.controls[google.maps.ControlPosition.TOP_CENTER].push(
                locationButton
            );
            //test get current location onload

            locationButton.addEventListener("click", () => {
                // Try HTML5 geolocation.

                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        (position) => {
                            const pos = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude,
                            };

                            infoWindow.setPosition(pos);
                            infoWindow.setContent("Location found.");
                            infoWindow.open(map);
                            map.setCenter(pos);
                            lat.value = pos.lat;
                            lng.value = pos.lng;
                            initMap();
                        },
                        () => {
                            handleLocationError(true, infoWindow, map.getCenter());
                        }
                    );
                } else {
                    // Browser doesn't support Geolocation
                    handleLocationError(false, infoWindow, map.getCenter());
                }
            });

            function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                infoWindow.setPosition(pos);
                infoWindow.setContent(
                    browserHasGeolocation
                        ? "Error: The Geolocation service failed."
                        : "Error: Your browser doesn't support geolocation."
                );
                infoWindow.open(map);
            }
            // end current location code
            geocoder.geocode({ latLng: myLatlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        address.value = results[0].formatted_address;
                        lat.value = marker.getPosition().lat();
                        lng.value = marker.getPosition().lng();
                        infowindow.setContent(results[0].formatted_address);
                        infowindow.open(map, marker);
                    }
                }
            });

            google.maps.event.addListener(marker, "dragend", function () {
                geocoder.geocode(
                    { latLng: marker.getPosition() },
                    function (results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            if (results[0]) {
                                address.value = results[0].formatted_address;
                                lat.value = marker.getPosition().lat();
                                lng.value = marker.getPosition().lng();
                                infowindow.setContent(results[0].formatted_address);
                                infowindow.open(map, marker);
                            }
                        }
                    }
                );
            });
        }

        function initialize() {
            var input = document.getElementById("address2");
            var autocomplete = new google.maps.places.Autocomplete(
                                                                              /** @@type {HTMLInputElement} */(input),
                {
                    // types: ["(cities)"],
                    types: ["establishment"],
                }
            );
            google.maps.event.addListener(
                autocomplete,
                "place_changed",
                function () {
                    var place = autocomplete.getPlace();
                    if (!place.geometry) {
                        return;
                    }
                    lat.value = place.geometry.location.lat();
                    lng.value = place.geometry.location.lng();
                    // initMap();
                    var address = "";
                    if (place.address_components) {
                        address = [
                            (place.address_components[0] &&
                                place.address_components[0].short_name) ||
                            "",
                            (place.address_components[1] &&
                                place.address_components[1].short_name) ||
                            "",
                            (place.address_components[2] &&
                                place.address_components[2].short_name) ||
                            "",
                        ].join(" ");
                    }
                    debugger
                    console.log(lat.value)
                    console.log(lng.value)
                    initMap();

                }
            );
        }

        google.maps.event.addDomListener(window, "load", initialize);

        google.maps.event.addDomListener(window, "load", initMap);

        $('.map_container').hide()

        $('.input-sh').on('click', function () {
            $('.map_container').slideToggle()
        })

        document.getElementById('address2').addEventListener('keydown', function (event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Prevent form from submitting

                // performMapSearch(this.value);

                return false; // Prevents default form submission when Enter is pressed
            }
        });
    </script>

    <script>
        $(document).ready(function () {
            $(".flatpickr").flatpickr({
                disableMobile: "true"
            });

            $(".flatpickrTime").flatpickr({
                enableTime: true,
                noCalendar: true,
                disableMobile: "true"
            });
        })
    </script>
    <script>
        function rejectOrder() {
            var refusedReason = $("#refusedReason").val();
            if (!refusedReason.trim()) {
                toastr.error("@localizer["Please enter the reason for cancellation"]");
                return 0;
            }
            else {
                $("#btnSumbitRejectForm").click()
            }
        }
    </script>
}
